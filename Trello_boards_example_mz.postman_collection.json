{
	"info": {
		"_postman_id": "e5f2ec3e-081c-4f2e-be74-8a632a702f5b",
		"name": "Trello_boards_example_mz",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CreateBoard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = JSON.parse(responseBody);\r",
							"\r",
							"var board_id = response.id;\r",
							"var board_name = response.name;\r",
							"\r",
							"pm.environment.set(\"board_id\", board_id);\r",
							"\r",
							"tests['board_name'] = response.name === board_name;\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization: OAuth oauth_consumer_key=",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "OAuth oauth_consumer_key=:",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{host}}/1/boards/?key={{api-key}}&token={{token_trello}}&name={{board_name_initial}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token_trello}}"
						},
						{
							"key": "name",
							"value": "{{board_name_initial}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/1/boards/{{board_id}}?key={{api-key}}&token={{token_trello}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"1",
						"boards",
						"{{board_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token_trello}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ModifyBoard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = JSON.parse(responseBody);\r",
							"\r",
							"var board_name = response.name;\r",
							"\r",
							"tests['board_name'] = response.name === board_name;\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{host}}/1/boards/{{board_id}}?key={{api-key}}&token={{token_trello}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"1",
						"boards",
						"{{board_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token_trello}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_Board_after_modify",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/1/boards/{{board_id}}?key={{api-key}}&token={{token_trello}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"1",
						"boards",
						"{{board_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token_trello}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteBoard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/1/boards/{{board_id}}?key={{api-key}}&token={{token_trello}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"1",
						"boards",
						"{{board_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token_trello}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_Board_after_delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Status code is \", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct: 'resource was not found'\", function () {\r",
							"    pm.response.to.have.body(\"The requested resource was not found.\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/1/boards/{{board_id}}?key={{api-key}}&token={{token_trello}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"1",
						"boards",
						"{{board_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token_trello}}"
						}
					]
				}
			},
			"response": []
		}
	]
}